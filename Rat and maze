class Solution {
  public:
    void solve(int i,int j,vector<vector<int>>& maze,string path,vector<string> &res,int n){
        if(i<0 || i>=n || j<0 || j>=n || maze[i][j]==0){
            return ;
        }
        if(i==n-1 && j==n-1){
            res.push_back(path);
            return;
        }
        maze[i][j]=0;
        path.push_back('D');
        solve(i+1, j, maze, path, res, n);
        path.pop_back();

        path.push_back('L');
        solve(i, j-1, maze, path, res, n);
        path.pop_back();

        path.push_back('R');
        solve(i, j+1, maze, path, res, n);
        path.pop_back();

        path.push_back('U');
        solve(i-1, j, maze, path, res, n);
        path.pop_back();
        
        
        
        maze[i][j]=1;
    }
    vector<string> ratInMaze(vector<vector<int>>& maze) {
        // code here
        int n=maze.size();
        vector<string> res;
        string s="";
        solve(0,0,maze,s,res,n);
        //reverse(res.begin(),res.end());
        return res;
    }
};
